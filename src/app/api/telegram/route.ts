import { NextRequest } from 'next/server'
import { TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID } from '@/config/integrations'

function formatMessage({ name, contact, message, page }: { name?: string; contact: string; message?: string; page?: string }) {
  const lines = [
    'üü¢ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å —Å–∞–π—Ç–∞ drweb.gundyrev.com',
    name ? `üë§ –ò–º—è: ${name}` : undefined,
    `üìû –ö–æ–Ω—Ç–∞–∫—Ç: ${contact}`,
    message ? `üí¨ –í–æ–ø—Ä–æ—Å: ${message}` : undefined,
    page ? `üîó –°—Ç—Ä–∞–Ω–∏—Ü–∞: ${page}` : undefined,
    `‚è± –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`,
  ].filter(Boolean)
  return lines.join('\n')
}

export async function POST(req: NextRequest) {
  try {
    const { name, contact, message, page } = await req.json().catch(() => ({}))

    if (!contact || typeof contact !== 'string' || contact.trim().length < 3) {
      return new Response(JSON.stringify({ error: '–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç (Telegram –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω).' }), { status: 400 })
    }

    const token = TELEGRAM_BOT_TOKEN
    const chatId = TELEGRAM_CHAT_ID
    if (!token || !chatId) {
      return new Response(JSON.stringify({ error: '–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–Ω–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏).' }), { status: 503 })
    }

    const text = formatMessage({ name, contact, message, page })
    const url = `https://api.telegram.org/bot${token}/sendMessage`

    const res = await fetch(url, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ chat_id: chatId, text, parse_mode: 'HTML', disable_web_page_preview: true }),
      // Enforce server-side fetch
      cache: 'no-store',
    })

    if (!res.ok) {
      const payload = await res.json().catch(() => ({}))
      console.error('Telegram API error', res.status, payload)
      return new Response(JSON.stringify({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' }), { status: 502 })
    }

    return new Response(JSON.stringify({ ok: true }), { status: 200 })
  } catch (e) {
    console.error('Telegram route error', e)
    return new Response(JSON.stringify({ error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞' }), { status: 500 })
  }
}
